#lang racket

(define (my-list-ref xs num)
  (cond
  [(or (negative? num) (> num (sub1 (length xs)))) (error "The index has to be between 0 and length-1")]
  [(zero? num) (car xs)]
  [else (my-list-ref (cdr xs) (sub1 num))]

  )
)

(= (my-list-ref '(1 2 3) 0) 1)
(= (my-list-ref '(1 2 3) 1) 2)
(equal? (my-list-ref '("Hello" 2 ("nested list")) 0) "Hello")
(= (my-list-ref '(1 3 5 7) 3) 7)
;my test
(my-list-ref '(1 2 3) -100) ; error: Invalid index!



